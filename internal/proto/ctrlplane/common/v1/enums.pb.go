// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: ctrlplane/common/v1/enums.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthProvider int32

const (
	AuthProvider_AUTH_PROVIDER_UNSPECIFIED AuthProvider = 0
	AuthProvider_AUTH_PROVIDER_GOOGLE      AuthProvider = 1
	AuthProvider_AUTH_PROVIDER_GITHUB      AuthProvider = 2
)

// Enum value maps for AuthProvider.
var (
	AuthProvider_name = map[int32]string{
		0: "AUTH_PROVIDER_UNSPECIFIED",
		1: "AUTH_PROVIDER_GOOGLE",
		2: "AUTH_PROVIDER_GITHUB",
	}
	AuthProvider_value = map[string]int32{
		"AUTH_PROVIDER_UNSPECIFIED": 0,
		"AUTH_PROVIDER_GOOGLE":      1,
		"AUTH_PROVIDER_GITHUB":      2,
	}
)

func (x AuthProvider) Enum() *AuthProvider {
	p := new(AuthProvider)
	*p = x
	return p
}

func (x AuthProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[0].Descriptor()
}

func (AuthProvider) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[0]
}

func (x AuthProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthProvider.Descriptor instead.
func (AuthProvider) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{0}
}

type HookType int32

const (
	HookType_HOOK_TYPE_UNSPECIFIED HookType = 0
	HookType_HOOK_TYPE_REPO        HookType = 1
	HookType_HOOK_TYPE_MESSAGING   HookType = 2
)

// Enum value maps for HookType.
var (
	HookType_name = map[int32]string{
		0: "HOOK_TYPE_UNSPECIFIED",
		1: "HOOK_TYPE_REPO",
		2: "HOOK_TYPE_MESSAGING",
	}
	HookType_value = map[string]int32{
		"HOOK_TYPE_UNSPECIFIED": 0,
		"HOOK_TYPE_REPO":        1,
		"HOOK_TYPE_MESSAGING":   2,
	}
)

func (x HookType) Enum() *HookType {
	p := new(HookType)
	*p = x
	return p
}

func (x HookType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HookType) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[1].Descriptor()
}

func (HookType) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[1]
}

func (x HookType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HookType.Descriptor instead.
func (HookType) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{1}
}

type RepoHook int32

const (
	RepoHook_REPO_HOOK_UNSPECIFIED RepoHook = 0
	RepoHook_REPO_HOOK_GITHUB      RepoHook = 1
	RepoHook_REPO_HOOK_GITLAB      RepoHook = 2
)

// Enum value maps for RepoHook.
var (
	RepoHook_name = map[int32]string{
		0: "REPO_HOOK_UNSPECIFIED",
		1: "REPO_HOOK_GITHUB",
		2: "REPO_HOOK_GITLAB",
	}
	RepoHook_value = map[string]int32{
		"REPO_HOOK_UNSPECIFIED": 0,
		"REPO_HOOK_GITHUB":      1,
		"REPO_HOOK_GITLAB":      2,
	}
)

func (x RepoHook) Enum() *RepoHook {
	p := new(RepoHook)
	*p = x
	return p
}

func (x RepoHook) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepoHook) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[2].Descriptor()
}

func (RepoHook) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[2]
}

func (x RepoHook) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepoHook.Descriptor instead.
func (RepoHook) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{2}
}

type MessagingHook int32

const (
	MessagingHook_MESSAGING_HOOK_UNSPECIFIED MessagingHook = 0
	MessagingHook_MESSAGING_HOOK_SLACK       MessagingHook = 1
	MessagingHook_MESSAGING_HOOK_TEAMS       MessagingHook = 2
)

// Enum value maps for MessagingHook.
var (
	MessagingHook_name = map[int32]string{
		0: "MESSAGING_HOOK_UNSPECIFIED",
		1: "MESSAGING_HOOK_SLACK",
		2: "MESSAGING_HOOK_TEAMS",
	}
	MessagingHook_value = map[string]int32{
		"MESSAGING_HOOK_UNSPECIFIED": 0,
		"MESSAGING_HOOK_SLACK":       1,
		"MESSAGING_HOOK_TEAMS":       2,
	}
)

func (x MessagingHook) Enum() *MessagingHook {
	p := new(MessagingHook)
	*p = x
	return p
}

func (x MessagingHook) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessagingHook) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[3].Descriptor()
}

func (MessagingHook) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[3]
}

func (x MessagingHook) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessagingHook.Descriptor instead.
func (MessagingHook) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{3}
}

type SetupAction int32

const (
	SetupAction_SETUP_ACTION_UNSPECIFIED              SetupAction = 0
	SetupAction_SETUP_ACTION_INSTALL                  SetupAction = 1
	SetupAction_SETUP_ACTION_UPDATE                   SetupAction = 2
	SetupAction_SETUP_ACTION_DELETE                   SetupAction = 3
	SetupAction_SETUP_ACTION_REQUEST                  SetupAction = 4
	SetupAction_SETUP_ACTION_SUSPEND                  SetupAction = 5
	SetupAction_SETUP_ACTION_UNSUSPEND                SetupAction = 6
	SetupAction_SETUP_ACTION_NEW_PERMISSIONS_ACCEPTED SetupAction = 7
)

// Enum value maps for SetupAction.
var (
	SetupAction_name = map[int32]string{
		0: "SETUP_ACTION_UNSPECIFIED",
		1: "SETUP_ACTION_INSTALL",
		2: "SETUP_ACTION_UPDATE",
		3: "SETUP_ACTION_DELETE",
		4: "SETUP_ACTION_REQUEST",
		5: "SETUP_ACTION_SUSPEND",
		6: "SETUP_ACTION_UNSUSPEND",
		7: "SETUP_ACTION_NEW_PERMISSIONS_ACCEPTED",
	}
	SetupAction_value = map[string]int32{
		"SETUP_ACTION_UNSPECIFIED":              0,
		"SETUP_ACTION_INSTALL":                  1,
		"SETUP_ACTION_UPDATE":                   2,
		"SETUP_ACTION_DELETE":                   3,
		"SETUP_ACTION_REQUEST":                  4,
		"SETUP_ACTION_SUSPEND":                  5,
		"SETUP_ACTION_UNSUSPEND":                6,
		"SETUP_ACTION_NEW_PERMISSIONS_ACCEPTED": 7,
	}
)

func (x SetupAction) Enum() *SetupAction {
	p := new(SetupAction)
	*p = x
	return p
}

func (x SetupAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetupAction) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[4].Descriptor()
}

func (SetupAction) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[4]
}

func (x SetupAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetupAction.Descriptor instead.
func (SetupAction) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{4}
}

type WorkflowStatus int32

const (
	WorkflowStatus_WORKFLOW_STATUS_UNSPECIFIED WorkflowStatus = 0
	WorkflowStatus_WORKFLOW_STATUS_SUCCESS     WorkflowStatus = 1
	WorkflowStatus_WORKFLOW_STATUS_FAILURE     WorkflowStatus = 2
	WorkflowStatus_WORKFLOW_STATUS_QUEUED      WorkflowStatus = 3
	WorkflowStatus_WORKFLOW_STATUS_SIGNALED    WorkflowStatus = 4
	WorkflowStatus_WORKFLOW_STATUS_SKIPPED     WorkflowStatus = 5
)

// Enum value maps for WorkflowStatus.
var (
	WorkflowStatus_name = map[int32]string{
		0: "WORKFLOW_STATUS_UNSPECIFIED",
		1: "WORKFLOW_STATUS_SUCCESS",
		2: "WORKFLOW_STATUS_FAILURE",
		3: "WORKFLOW_STATUS_QUEUED",
		4: "WORKFLOW_STATUS_SIGNALED",
		5: "WORKFLOW_STATUS_SKIPPED",
	}
	WorkflowStatus_value = map[string]int32{
		"WORKFLOW_STATUS_UNSPECIFIED": 0,
		"WORKFLOW_STATUS_SUCCESS":     1,
		"WORKFLOW_STATUS_FAILURE":     2,
		"WORKFLOW_STATUS_QUEUED":      3,
		"WORKFLOW_STATUS_SIGNALED":    4,
		"WORKFLOW_STATUS_SKIPPED":     5,
	}
)

func (x WorkflowStatus) Enum() *WorkflowStatus {
	p := new(WorkflowStatus)
	*p = x
	return p
}

func (x WorkflowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_common_v1_enums_proto_enumTypes[5].Descriptor()
}

func (WorkflowStatus) Type() protoreflect.EnumType {
	return &file_ctrlplane_common_v1_enums_proto_enumTypes[5]
}

func (x WorkflowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowStatus.Descriptor instead.
func (WorkflowStatus) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_common_v1_enums_proto_rawDescGZIP(), []int{5}
}

var File_ctrlplane_common_v1_enums_proto protoreflect.FileDescriptor

var file_ctrlplane_common_v1_enums_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2a, 0x61, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52,
	0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x02, 0x2a, 0x52, 0x0a, 0x08, 0x48, 0x6f, 0x6f,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x51, 0x0a,
	0x08, 0x52, 0x65, 0x70, 0x6f, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50,
	0x4f, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x48, 0x4f, 0x4f,
	0x4b, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45,
	0x50, 0x4f, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x02,
	0x2a, 0x63, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x6f,
	0x6b, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x48,
	0x4f, 0x4f, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x48,
	0x4f, 0x4f, 0x4b, 0x5f, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x54, 0x45,
	0x41, 0x4d, 0x53, 0x10, 0x02, 0x2a, 0xf2, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x75, 0x70, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x54,
	0x55, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e,
	0x44, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x12,
	0x29, 0x0a, 0x25, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x45, 0x57, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x07, 0x2a, 0xc2, 0x01, 0x0a, 0x0e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x1b, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x57,
	0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b,
	0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x05, 0x42,
	0xd2, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x45, 0x6e, 0x75,
	0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x6f, 0x2e, 0x62, 0x72,
	0x65, 0x75, 0x2e, 0x69, 0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6d, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x74, 0x72, 0x6c,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x43, 0x58, 0xaa, 0x02,
	0x13, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x74, 0x72,
	0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x43,
	0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ctrlplane_common_v1_enums_proto_rawDescOnce sync.Once
	file_ctrlplane_common_v1_enums_proto_rawDescData = file_ctrlplane_common_v1_enums_proto_rawDesc
)

func file_ctrlplane_common_v1_enums_proto_rawDescGZIP() []byte {
	file_ctrlplane_common_v1_enums_proto_rawDescOnce.Do(func() {
		file_ctrlplane_common_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_ctrlplane_common_v1_enums_proto_rawDescData)
	})
	return file_ctrlplane_common_v1_enums_proto_rawDescData
}

var file_ctrlplane_common_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_ctrlplane_common_v1_enums_proto_goTypes = []any{
	(AuthProvider)(0),   // 0: ctrlplane.common.v1.AuthProvider
	(HookType)(0),       // 1: ctrlplane.common.v1.HookType
	(RepoHook)(0),       // 2: ctrlplane.common.v1.RepoHook
	(MessagingHook)(0),  // 3: ctrlplane.common.v1.MessagingHook
	(SetupAction)(0),    // 4: ctrlplane.common.v1.SetupAction
	(WorkflowStatus)(0), // 5: ctrlplane.common.v1.WorkflowStatus
}
var file_ctrlplane_common_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ctrlplane_common_v1_enums_proto_init() }
func file_ctrlplane_common_v1_enums_proto_init() {
	if File_ctrlplane_common_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ctrlplane_common_v1_enums_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ctrlplane_common_v1_enums_proto_goTypes,
		DependencyIndexes: file_ctrlplane_common_v1_enums_proto_depIdxs,
		EnumInfos:         file_ctrlplane_common_v1_enums_proto_enumTypes,
	}.Build()
	File_ctrlplane_common_v1_enums_proto = out.File
	file_ctrlplane_common_v1_enums_proto_rawDesc = nil
	file_ctrlplane_common_v1_enums_proto_goTypes = nil
	file_ctrlplane_common_v1_enums_proto_depIdxs = nil
}
