// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: ctrlplane/events/v1/diff.proto

package eventsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiffFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added    []string `protobuf:"bytes,1,rep,name=added,proto3" json:"added,omitempty"`
	Deleted  []string `protobuf:"bytes,2,rep,name=deleted,proto3" json:"deleted,omitempty"`
	Modified []string `protobuf:"bytes,3,rep,name=modified,proto3" json:"modified,omitempty"`
	Renamed  []string `protobuf:"bytes,4,rep,name=renamed,proto3" json:"renamed,omitempty"`
}

func (x *DiffFiles) Reset() {
	*x = DiffFiles{}
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiffFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffFiles) ProtoMessage() {}

func (x *DiffFiles) ProtoReflect() protoreflect.Message {
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffFiles.ProtoReflect.Descriptor instead.
func (*DiffFiles) Descriptor() ([]byte, []int) {
	return file_ctrlplane_events_v1_diff_proto_rawDescGZIP(), []int{0}
}

func (x *DiffFiles) GetAdded() []string {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *DiffFiles) GetDeleted() []string {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *DiffFiles) GetModified() []string {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *DiffFiles) GetRenamed() []string {
	if x != nil {
		return x.Renamed
	}
	return nil
}

type DiffLines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added   int32 `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
	Removed int32 `protobuf:"varint,2,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *DiffLines) Reset() {
	*x = DiffLines{}
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiffLines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffLines) ProtoMessage() {}

func (x *DiffLines) ProtoReflect() protoreflect.Message {
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffLines.ProtoReflect.Descriptor instead.
func (*DiffLines) Descriptor() ([]byte, []int) {
	return file_ctrlplane_events_v1_diff_proto_rawDescGZIP(), []int{1}
}

func (x *DiffLines) GetAdded() int32 {
	if x != nil {
		return x.Added
	}
	return 0
}

func (x *DiffLines) GetRemoved() int32 {
	if x != nil {
		return x.Removed
	}
	return 0
}

type Diff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files *DiffFiles `protobuf:"bytes,1,opt,name=files,proto3" json:"files,omitempty"`
	Lines *DiffLines `protobuf:"bytes,2,opt,name=lines,proto3" json:"lines,omitempty"`
}

func (x *Diff) Reset() {
	*x = Diff{}
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Diff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diff) ProtoMessage() {}

func (x *Diff) ProtoReflect() protoreflect.Message {
	mi := &file_ctrlplane_events_v1_diff_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diff.ProtoReflect.Descriptor instead.
func (*Diff) Descriptor() ([]byte, []int) {
	return file_ctrlplane_events_v1_diff_proto_rawDescGZIP(), []int{2}
}

func (x *Diff) GetFiles() *DiffFiles {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Diff) GetLines() *DiffLines {
	if x != nil {
		return x.Lines
	}
	return nil
}

var File_ctrlplane_events_v1_diff_proto protoreflect.FileDescriptor

var file_ctrlplane_events_v1_diff_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x71, 0x0a, 0x09, 0x44, 0x69, 0x66, 0x66, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x22, 0x3b, 0x0a, 0x09, 0x44, 0x69, 0x66, 0x66,
	0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x72, 0x0a, 0x04, 0x44, 0x69, 0x66, 0x66, 0x12, 0x34, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x4c, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x42, 0xd1, 0x01, 0x0a, 0x17, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x44, 0x69, 0x66, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3d, 0x67, 0x6f, 0x2e, 0x62, 0x72, 0x65, 0x75, 0x2e, 0x69, 0x6f, 0x2f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x13, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ctrlplane_events_v1_diff_proto_rawDescOnce sync.Once
	file_ctrlplane_events_v1_diff_proto_rawDescData = file_ctrlplane_events_v1_diff_proto_rawDesc
)

func file_ctrlplane_events_v1_diff_proto_rawDescGZIP() []byte {
	file_ctrlplane_events_v1_diff_proto_rawDescOnce.Do(func() {
		file_ctrlplane_events_v1_diff_proto_rawDescData = protoimpl.X.CompressGZIP(file_ctrlplane_events_v1_diff_proto_rawDescData)
	})
	return file_ctrlplane_events_v1_diff_proto_rawDescData
}

var file_ctrlplane_events_v1_diff_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ctrlplane_events_v1_diff_proto_goTypes = []any{
	(*DiffFiles)(nil), // 0: ctrlplane.events.v1.DiffFiles
	(*DiffLines)(nil), // 1: ctrlplane.events.v1.DiffLines
	(*Diff)(nil),      // 2: ctrlplane.events.v1.Diff
}
var file_ctrlplane_events_v1_diff_proto_depIdxs = []int32{
	0, // 0: ctrlplane.events.v1.Diff.files:type_name -> ctrlplane.events.v1.DiffFiles
	1, // 1: ctrlplane.events.v1.Diff.lines:type_name -> ctrlplane.events.v1.DiffLines
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ctrlplane_events_v1_diff_proto_init() }
func file_ctrlplane_events_v1_diff_proto_init() {
	if File_ctrlplane_events_v1_diff_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ctrlplane_events_v1_diff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ctrlplane_events_v1_diff_proto_goTypes,
		DependencyIndexes: file_ctrlplane_events_v1_diff_proto_depIdxs,
		MessageInfos:      file_ctrlplane_events_v1_diff_proto_msgTypes,
	}.Build()
	File_ctrlplane_events_v1_diff_proto = out.File
	file_ctrlplane_events_v1_diff_proto_rawDesc = nil
	file_ctrlplane_events_v1_diff_proto_goTypes = nil
	file_ctrlplane_events_v1_diff_proto_depIdxs = nil
}
