// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_roles.sql

package entities

import (
	"context"

	"github.com/google/uuid"
)

const createUserRole = `-- name: CreateUserRole :one
INSERT INTO user_roles (name, user_id, org_id)
VALUES ($1, $2, $3) RETURNING id, created_at, updated_at, name, user_id, org_id
`

type CreateUserRoleParams struct {
	Name   string    `json:"name"`
	UserID uuid.UUID `json:"user_id"`
	OrgID  uuid.UUID `json:"org_id"`
}

func (q *Queries) CreateUserRole(ctx context.Context, arg CreateUserRoleParams) (UserRole, error) {
	row := q.db.QueryRow(ctx, createUserRole, arg.Name, arg.UserID, arg.OrgID)
	var i UserRole
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.UserID,
		&i.OrgID,
	)
	return i, err
}
