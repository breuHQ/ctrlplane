name: Release quantm
on:
  pull_request:
    # types:
    #   - closed
  workflow_dispatch:
  push:
    branches:
      - dev

env:
  GCP_PROJECT: quantm-live
  GCP_ARTIFACT_REPOSITORY: us-docker.pkg.dev/quantm-live/default-live-v1
  GKE_CLUSTER: alpha-live-v1
  REGION: us-central1
  GCR_SERVICE: quantm-api-live-v1

jobs:
  release-artifact:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set variables
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Authenticate with GCP
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: access_token
          credentials_json: ${{ secrets.GCP_JSON_KEY }}
          access_token_lifetime: 600s

      - name: Login into Google Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCP_ARTIFACT_REPOSITORY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.REGION }}

      - name: Build & Push docker image for API
        run: |
          docker build --target api -t quantm/api:latest .
          docker tag quantm/api:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/api:latest
          docker tag quantm/api:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/api:${{ steps.vars.outputs.short_sha }}
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/api:latest
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/api:${{ steps.vars.outputs.short_sha }}

      - name: Build & Push docker image for migrate
        run: |
          docker build --target migrate -t quantm/migrate:latest .
          docker tag quantm/migrate:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/migrate:latest
          docker tag quantm/migrate:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/migrate:${{ steps.vars.outputs.short_sha }}
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/migrate:latest
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/migrate:${{ steps.vars.outputs.short_sha }}

      - name: Build & Push docker image for mothership
        run: |
          docker build --target mothership -t quantm/mothership:latest .
          docker tag quantm/mothership:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/mothership:latest
          docker tag quantm/mothership:latest ${{ env.GCP_ARTIFACT_REPOSITORY }}/mothership:${{ steps.vars.outputs.short_sha }}
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/mothership:latest
          docker push ${{ env.GCP_ARTIFACT_REPOSITORY }}/mothership:${{ steps.vars.outputs.short_sha }}

      - name: Get deployments
        run: |
          kubectl get -n quantm deploy

      - name: Deploy mothership docker image to the GKE cluster
        run: |
          kubectl patch -n quantm deployment mothership -p '{"spec":{"template":{"spec":{"containers":[{"name":"mothership","image":"us-docker.pkg.dev/quantm-live/default-live-v1/mothership:latest"}]}}}}'

      - name: Deploy API to Cloud Run
        id: deployAPI
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.GCR_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GCP_ARTIFACT_REPOSITORY }}/api:${{ steps.vars.outputs.short_sha }}

      - name: Use output
        run: curl ${{ steps.deployAPI.outputs.url }}

      - name: docker ls
        run: docker image ls
