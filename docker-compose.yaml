# Copyright Â© 2022, Breu Inc. <info@breu.io>. All rights reserved. 
#
# This software is made available by Breu, Inc., under the terms of the 
# Breu Community License Agreement ("BCL Agreement"), version 1.0, found at  
# https://www.breu.io/license/community. By installating, downloading, 
# accessing, using or distrubting any of the software, you agree to the  
# terms of the license agreement. 
#
# The above copyright notice and the subsequent license agreement shall be 
# included in all copies or substantial portions of the software. 
#
# Breu, Inc. HEREBY DISCLAIMS ANY AND ALL WARRANTIES AND CONDITIONS, EXPRESS, 
# IMPLIED, STATUTORY, OR OTHERWISE, AND SPECIFICALLY DISCLAIMS ANY WARRANTY OF 
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, WITH RESPECT TO THE 
# SOFTWARE. 
#
# Breu, Inc. SHALL NOT BE LIABLE FOR ANY DAMAGES OF ANY KIND, INCLUDING BUT NOT 
# LIMITED TO, LOST PROFITS OR ANY CONSEQUENTIAL, SPECIAL, INCIDENTAL, INDIRECT, 
# OR DIRECT DAMAGES, HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, ARISING 
# OUT OF THIS AGREEMENT. THE FOREGOING SHALL APPLY TO THE EXTENT PERMITTED BY  
# APPLICABLE LAW. 

version: '3.9'
services:
  ctrlplane-database:
    container_name: ctrlplane-database
    image: cassandra:4
    ports:
      - '9042:9042'
    environment:
      - CASSNDRA_CLUSTER_NAME=ctrlplane
    volumes:
      - db-data:/var/lib/cassandra
  
  ctrlplane-database-init:
    container_name: ctrlplane-db-init
    image: cassandra:4
    depends_on:
      - ctrlplane-database
    volumes:
      - ./deploy/cassandra/keyspace.cql:/keyspace.cql
    command: /bin/bash -c "sleep 60 && echo loading database keyspace && cqlsh ctrlplane-database -f /keyspace.cql"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  ctrlplane-api:
    container_name: ctrlplane-api
    image: cosmtrek/air
    environment:
      SERVICE_NAME: web::api
      CASSANDRA_MIGRATION_SOURCE_URL: file:///api/internal/db/migrations
    env_file:
      - ./.env
    ports:
      - '8000:8000'
    volumes:
      - ./deploy/air/api.toml:/api/.air.toml
      - ./:/api/
      - api-go-pkg-mod:/go/pkg/mod
      - api-build-cache:/root/.cache/go-build
    working_dir: /api

  ctrlplane-worker--mothership:
    container_name: ctrlplane-worker--mothership
    image: cosmtrek/air
    environment:
      SERVICE_NAME: worker::mothership
    env_file:
      - ./.env
    volumes:
      - ./deploy/air/mothership.toml:/mothership/.air.toml
      - ./:/mothership/
      - worker-mothership-go-pkg-mod:/go/pkg/mod
      - worker-mothership-build-cache:/root/.cache/go-build
    working_dir: /mothership

  mailslurper:
    container_name: mailslurper
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'

  event-stream:
    container_name: event-stream
    image: nats:2.8.4
    ports:
      - '4222:4222'
    command: --cluster_name ctrlplane 

  # Temporal - https://temporal.io
  temporal-db:
    container_name: temporal-db
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${TEMPORAL_DB_PASS}
      POSTGRES_USER: ${TEMPORAL_DB_USER}
    ports:
      - '5432:5432'
    volumes:
      - temporal-pg-data:/var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - temporal-db
    environment:
      DB: postgresql
      DB_PORT: 5432
      POSTGRES_USER: ${TEMPORAL_DB_USER}
      POSTGRES_PWD: ${TEMPORAL_DB_PASS}
      POSTGRES_SEEDS: temporal-db
      DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/dev.yaml
    image: temporalio/auto-setup:1.17.4
    ports:
      - '7233:7233'
    volumes:
      - ./deploy/temporal/dynamicconfig/:/etc/temporal/config/dynamicconfig/

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.17.4
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      TEMPORAL_ADDRESS: temporal:7233
      TEMPORAL_CORS_ORIGINS: http://localhost:3000
    image: temporalio/ui:2.5.1
    ports:
      - 8080:8080


volumes:
  temporal-pg-data: {}
  db-data: {}
  api-go-pkg-mod: {}
  api-build-cache: {}
  worker-mothership-go-pkg-mod: {}
  worker-mothership-build-cache: {}
